{"version":3,"file":"static/js/221.2ab2f996.chunk.js","mappings":"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","sources":["webpack://lab-deploy-build/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","redux/services/usersSlice.js","webpack://lab-deploy-build/./src/components/RegisterForm/authForm.module.scss?608d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__W1TTO\"};","import React from 'react';\nimport PropTypes from 'proptypes';\n\nimport style from './Button.module.scss';\n\nconst Button = ({ children, onClick, className, buttonType = 'button' }) => {\n  return (\n    <button\n      type={buttonType}\n      className={[style.btn, className].join(' ')}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  buttonType: PropTypes.string,\n};\n\nexport default Button;\n","import { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useFormik } from 'formik';\nimport css from './authForm.module.scss';\nimport * as Yup from 'yup';\nimport Button from '../Button/Button';\nconst { useNavigate } = require('react-router-dom');\nconst { useRegisterMutation } = require('../../redux/services/usersSlice');\nconst { useDispatch } = require('react-redux');\nconst { setToken } = require('../../redux/services/authSlice');\n\nconst RegisterForm = () => {\n  const [isFirstRegisterStep, setIsFirstRegisterStep] = useState(true);\n\n  const [register, { isLoading }] = useRegisterMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  //function to next step registration\n  const moveNextRegistration = () => {\n    isFirstRegisterStep\n      ? setIsFirstRegisterStep(false)\n      : setIsFirstRegisterStep(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      location: '',\n      phone: '',\n    },\n\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .email('Email address is invalid')\n        .required('Please enter'),\n      password: Yup.string()\n        .required('Please enter')\n        .min(7, 'Password must be at least 7 characters')\n        .max(32, 'Password must not exceed 32 characters'),\n      confirmPassword: Yup.string()\n        .required('Please enter')\n        .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n      name: Yup.string()\n        .required('Please enter')\n        .matches(/^[aA-zZ\\s]+$/, 'Name contain only letters'),\n      location: Yup.string()\n        .required('Please enter')\n        .matches(\n          /([A-Za-z]+(?: [A-Za-z]+)*),? ([A-Za-z]{2})/,\n          'Enter by type: City, Region'\n        ),\n      phone: Yup.string()\n        .required('Please enter')\n        .matches(/^\\+380\\d{9}$/, 'Invalid phone number'),\n    }),\n\n    onSubmit: async ({ email, password, name, phone, location }) => {\n      try {\n        const {\n          data: { token },\n        } = await register({\n          email,\n          password,\n          name,\n          phone,\n          location,\n        });\n        dispatch(setToken(token));\n        navigate('/home');\n      } catch {\n        alert.error('Something went wrong. Maybe this email is already in use');\n      }\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <div className={css.formBlock}>\n      <h2 className={css.formTitle}>Registration</h2>\n      <form className={css.registerForm} onSubmit={formik.handleSubmit}>\n        {isFirstRegisterStep ? (\n          <>\n            <input\n              className={css.formInput}\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n              placeholder=\"Email\"\n            />\n\n            {formik.values.email !== '' && formik.errors.email ? (\n              <p className={css.inputErrorEmail}>{formik.errors.email}</p>\n            ) : null}\n            {formik.touched.email && formik.errors.email ? (\n              <p className={css.inputErrorEmail}>{formik.errors.email}</p>\n            ) : null}\n\n            <input\n              className={css.formInput}\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n              placeholder=\"Password\"\n            />\n            {formik.values.password !== '' && formik.errors.password ? (\n              <p className={css.inputErrorPassword}>{formik.errors.password}</p>\n            ) : null}\n            {formik.touched.password && formik.errors.password ? (\n              <p className={css.inputErrorPassword}>{formik.errors.password}</p>\n            ) : null}\n\n            <input\n              className={css.formInput}\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"confirmPassword\"\n              onChange={formik.handleChange}\n              value={formik.values.confirmPassword}\n              placeholder=\"Confirm Password\"\n            />\n            {formik.values.confirmPassword !== '' &&\n            formik.errors.confirmPassword ? (\n              <p className={css.inputErrorConfirmPassword}>\n                {formik.errors.confirmPassword}\n              </p>\n            ) : null}\n            {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n              <p className={css.inputErrorConfirmPassword}>\n                {formik.errors.confirmPassword}\n              </p>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <input\n              className={css.formInput}\n              id=\"name\"\n              name=\"name\"\n              type=\"name\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              placeholder=\"Name\"\n            />\n            {formik.values.name !== '' && formik.errors.name ? (\n              <p className={css.inputErrorName}>{formik.errors.name}</p>\n            ) : null}\n            {formik.touched.name && formik.errors.name ? (\n              <p className={css.inputErrorName}>{formik.errors.name}</p>\n            ) : null}\n\n            <input\n              className={css.formInput}\n              id=\"location\"\n              name=\"location\"\n              type=\"location\"\n              onChange={formik.handleChange}\n              value={formik.values.location}\n              placeholder=\"City, region\"\n            />\n            {formik.values.location !== '' && formik.errors.location ? (\n              <p className={css.inputErrorLocation}>{formik.errors.location}</p>\n            ) : null}\n            {formik.touched.location && formik.errors.location ? (\n              <p className={css.inputErrorLocation}>{formik.errors.location}</p>\n            ) : null}\n\n            <input\n              className={css.formInput}\n              id=\"phone\"\n              name=\"phone\"\n              type=\"phone\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n              placeholder=\"Mobile phone\"\n            />\n            {formik.values.phone !== '' && formik.errors.phone ? (\n              <p className={css.inputErrorPhone}>{formik.errors.phone}</p>\n            ) : null}\n            {formik.touched.phone && formik.errors.phone ? (\n              <p className={css.inputErrorPhone}>{formik.errors.phone}</p>\n            ) : null}\n          </>\n        )}\n\n        {isFirstRegisterStep && (\n          <div className={css.btnBlock}>\n            <Button\n              children=\"Next\"\n              onClick={moveNextRegistration}\n              className={css.formBtn}\n            />\n          </div>\n        )}\n        {!isFirstRegisterStep && (\n          <div className={css.btnBlock}>\n            <Button\n              children=\"Register\"\n              className={css.formBtn}\n              buttonType=\"submit\"\n              disabled={isLoading}\n            />\n            <Button\n              children=\"Back\"\n              className={css.formBtnBck}\n              onClick={moveNextRegistration}\n              disabled={isLoading}\n            />\n          </div>\n        )}\n      </form>\n\n      {/* {isFirstRegisterStep && <button className={css.formBtn} type='button' onClick={moveNextRegistration}>Next</button>} */}\n\n      <p className={css.linkToPage}>\n        Already have an account?{' '}\n        <Link className={css.link} to=\"/login\">\n          Login\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../../components/RegisterForm';\n\nconst RegisterPage = () => { \n    return (\n        <RegisterForm/>\n    )\n};\n\nexport default RegisterPage;\n","import { baseApi } from './baseApi';\n\n// Define endpoints for users\nconst usersApi = baseApi.injectEndpoints({\n  endpoints: builder => ({\n    register: builder.mutation({\n      query: userData => ({\n        url: `/users/register`,\n        method: 'POST',\n        body: userData,\n      }),\n    }),\n    login: builder.mutation({\n      query: userData => ({\n        url: `/users/login`,\n        method: 'POST',\n        body: userData,\n      }),\n    }),\n    edit: builder.mutation({\n      query: userData => ({\n        url: `/users/edit`,\n        method: 'PATCH',\n        body: userData,\n      }),\n      invalidatesTags: ['User'],\n    }),\n    logout: builder.mutation({\n      query: userData => `/users/logout`,\n    }),\n    current: builder.query({\n      query: () => `/users/current`,\n      providesTags: ['User'],\n    }),\n    avatars: builder.mutation({\n      query: userData => ({\n        url: `/users/avatars`,\n        method: 'PATCH',\n        body: userData,\n      }),\n      invalidatesTags: ['User'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useRegisterMutation,\n  useLoginMutation,\n  useEditMutation,\n  useLogoutMutation,\n  useCurrentQuery,\n  useAvatarsMutation,\n} = usersApi;\n","// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"authForm_formBlock__1ySqq\",\"formTitle\":\"authForm_formTitle__kG3g2\",\"registerForm\":\"authForm_registerForm__jQ767\",\"loginForm\":\"authForm_loginForm__s5wPX\",\"formInput\":\"authForm_formInput__7KbGC\",\"inputErrorPhone\":\"authForm_inputErrorPhone__26x35\",\"inputErrorLocation\":\"authForm_inputErrorLocation__pKJCM\",\"inputErrorName\":\"authForm_inputErrorName__i9xIe\",\"inputErrorConfirmPassword\":\"authForm_inputErrorConfirmPassword__inhRB\",\"inputLoginErrorPassword\":\"authForm_inputLoginErrorPassword__1CZq9\",\"inputErrorPassword\":\"authForm_inputErrorPassword__bGQhO\",\"inputLoginErrorEmail\":\"authForm_inputLoginErrorEmail__5HuH4\",\"inputErrorEmail\":\"authForm_inputErrorEmail__zuBJV\",\"formBtn\":\"authForm_formBtn__pBtde\",\"btnBlock\":\"authForm_btnBlock__OtIl3\",\"formBtnBck\":\"authForm_formBtnBck__EC-3Y\",\"linkToPage\":\"authForm_linkToPage__vpbWC\",\"link\":\"authForm_link__0cb4+\"};"],"names":["children","onClick","className","buttonType","type","style","join","useNavigate","require","useRegisterMutation","useDispatch","setToken","useState","isFirstRegisterStep","setIsFirstRegisterStep","register","isLoading","dispatch","navigate","moveNextRegistration","formik","useFormik","initialValues","email","password","confirmPassword","name","location","phone","validationSchema","Yup","shape","required","min","max","oneOf","matches","onSubmit","token","data","alert","error","resetForm","css","handleSubmit","id","onChange","handleChange","value","values","placeholder","errors","touched","Button","disabled","Link","to","usersApi","baseApi","endpoints","builder","mutation","query","userData","url","method","body","login","edit","invalidatesTags","logout","current","providesTags","avatars","overrideExisting","useLoginMutation","useEditMutation","useLogoutMutation","useCurrentQuery","useAvatarsMutation"],"sourceRoot":""}