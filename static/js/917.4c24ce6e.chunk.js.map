{"version":3,"file":"static/js/917.4c24ce6e.chunk.js","mappings":"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","sources":["webpack://lab-deploy-build/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","redux/services/usersSlice.js","webpack://lab-deploy-build/./src/components/RegisterForm/authForm.module.scss?608d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__W1TTO\"};","import React from 'react';\nimport PropTypes from 'proptypes';\n\nimport style from './Button.module.scss';\n\nconst Button = ({ children, onClick, className, buttonType = 'button' }) => {\n  return (\n    <button\n      type={buttonType}\n      className={`${style.btn} ${className}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  buttonType: PropTypes.string,\n};\n\nexport default Button;\n","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport Button from '../Button';\nimport css from '../RegisterForm/authForm.module.scss';\nimport * as Yup from 'yup';\nimport { useLoginMutation } from '../../redux/services/usersSlice';\nimport { setToken } from '../../redux/services/authSlice';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [login, { isLoading }] = useLoginMutation();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .email('Email address is invalid')\n        .required('Please enter'),\n      password: Yup.string()\n        .required('Please enter')\n        .min(6, 'Password must be at least 6 characters')\n        .max(40, 'Password must not exceed 40 characters'),\n    }),\n    onSubmit: async values => {\n      const response = await login(values).unwrap();\n      dispatch(setToken(response.data.token));\n\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <div className={css.formBlock}>\n      <h2 className={css.formTitle}>Login</h2>\n      <form className={css.loginForm} onSubmit={formik.handleSubmit}>\n        <input\n          className={css.formInput}\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          placeholder=\"Email\"\n        />\n\n        {formik.values.email !== '' && formik.errors.email ? (\n          <p className={css.inputLoginErrorEmail}>{formik.errors.email}</p>\n        ) : null}\n\n        <input\n          className={css.formInput}\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          placeholder=\"Password\"\n        />\n\n        {formik.values.password !== '' && formik.errors.password ? (\n          <p className={css.inputLoginErrorPassword}>\n            {formik.errors.password}\n          </p>\n        ) : null}\n\n        <Button\n          className={css.formBtn}\n          buttonType=\"submit\"\n          disabled={isLoading}\n        >\n          Login\n        </Button>\n      </form>\n      <p className={css.linkToPage}>\n        Don't have an account?{' '}\n        <Link className={css.link} to=\"/register\">\n          Register\n        </Link>{' '}\n      </p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../../components/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <LoginForm/>\n    )\n};\n\nexport default LoginPage;\n","import { baseApi } from './baseApi';\n\n// Define endpoints for users\nconst usersApi = baseApi.injectEndpoints({\n  endpoints: builder => ({\n    register: builder.mutation({\n      query: userData => ({\n        url: `/users/register`,\n        method: 'POST',\n        body: userData,\n      }),\n    }),\n    login: builder.mutation({\n      query: userData => ({\n        url: `/users/login`,\n        method: 'POST',\n        body: userData,\n      }),\n    }),\n    edit: builder.mutation({\n      query: userData => ({\n        url: `/users/edit`,\n        method: 'PATCH',\n        body: userData,\n      }),\n      invalidatesTags: ['User'],\n    }),\n    logout: builder.mutation({\n      query: userData => `/users/logout`,\n    }),\n    current: builder.query({\n      query: () => `/users/current`,\n      providesTags: ['User'],\n    }),\n    avatars: builder.mutation({\n      query: userData => ({\n        url: `/users/avatars`,\n        method: 'PATCH',\n        body: userData,\n      }),\n      invalidatesTags: ['User'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useRegisterMutation,\n  useLoginMutation,\n  useEditMutation,\n  useLogoutMutation,\n  useCurrentQuery,\n  useAvatarsMutation,\n} = usersApi;\n","// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"authForm_formBlock__1ySqq\",\"formTitle\":\"authForm_formTitle__kG3g2\",\"registerForm\":\"authForm_registerForm__jQ767\",\"loginForm\":\"authForm_loginForm__s5wPX\",\"formInput\":\"authForm_formInput__7KbGC\",\"inputErrorPhone\":\"authForm_inputErrorPhone__26x35\",\"inputErrorLocation\":\"authForm_inputErrorLocation__pKJCM\",\"inputErrorName\":\"authForm_inputErrorName__i9xIe\",\"inputErrorConfirmPassword\":\"authForm_inputErrorConfirmPassword__inhRB\",\"inputLoginErrorPassword\":\"authForm_inputLoginErrorPassword__1CZq9\",\"inputErrorPassword\":\"authForm_inputErrorPassword__bGQhO\",\"inputLoginErrorEmail\":\"authForm_inputLoginErrorEmail__5HuH4\",\"inputErrorEmail\":\"authForm_inputErrorEmail__zuBJV\",\"formBtn\":\"authForm_formBtn__pBtde\",\"btnBlock\":\"authForm_btnBlock__OtIl3\",\"formBtnBck\":\"authForm_formBtnBck__EC-3Y\",\"linkToPage\":\"authForm_linkToPage__vpbWC\",\"link\":\"authForm_link__0cb4+\"};"],"names":["children","onClick","className","buttonType","type","style","dispatch","useDispatch","useLoginMutation","login","isLoading","formik","useFormik","initialValues","email","password","validationSchema","Yup","shape","required","min","max","onSubmit","values","unwrap","response","setToken","data","token","resetForm","css","handleSubmit","id","name","onChange","handleChange","value","placeholder","errors","Button","disabled","Link","to","usersApi","baseApi","endpoints","builder","register","mutation","query","userData","url","method","body","edit","invalidatesTags","logout","current","providesTags","avatars","overrideExisting","useRegisterMutation","useEditMutation","useLogoutMutation","useCurrentQuery","useAvatarsMutation"],"sourceRoot":""}