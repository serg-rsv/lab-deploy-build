{"version":3,"file":"static/css/395.2f0bd989.chunk.css","mappings":"AAEA,0BAIE,wKAIA,CARF,0BAaI,CALF,qCCyCE,0BDjDJ,CAEE,aADA,iBAEA,WAUE,2NAOA,4DAPA,gBAOA,2BAEA,0BACA,4KCsCA,8BDjCF,CCiCE,6BDjCF,6MCqBE,shBAIA,mMDzBF,0BAaI,CCYF,6BDZE,2TChBJ,0BAEA,4KD8BE","sources":["pages/HomePage/HomePage.module.scss","scss/utils/_mixins.scss"],"sourcesContent":["@import '../../scss//utils//mixins';\n\n.homePage {\n  padding-top: 60px;\n  height: 100vh;\n  width: 100vw;\n  background-image: url('../../images/home/mobile/home-img-x1-mob.png'),\n    url('../../images/home/mobile/vector@1x_mob.png');\n  background-repeat: no-repeat, no-repeat;\n  background-size: auto, auto;\n  background-position: center bottom;\n\n  @include mq(tablet) {\n    padding-top: 90px;\n\n    background-image: url('../../images/home/tablet/home-img-x1-tab.png'),\n      url('../../images/home/tablet/vector@1x_tab.png');\n    background-size: contain, contain;\n    background-position: center bottom;\n  }\n\n  @include mq(desktop) {\n    background-image: url('../../images/home/desktop/home-img-x1-desc.png'),\n      url('../../images/home/desktop/bckgr@1x_desktop.png');\n    background-size: contain, cover;\n    background-position: right bottom;\n  }\n}\n\n@include mq(retina) {\n  .homePage {\n    background-image: url('../../images/home/mobile/home-img-x2-mob.png'),\n      url('../../images/home/mobile/vector@1x_mob.png');\n    background-size: contain, cover;\n\n    @include mq(tablet) {\n      background-image: url('../../images/home/tablet/home-img-x2-tab.png'),\n        url('../../images/home/tablet/vector@1x_tab.png');\n      background-size: contain, cover;\n      background-position: center bottom;\n    }\n\n    @include mq(desktop) {\n      background-image: url('../../images/home/desktop/home-img-x2-desc.png'),\n        url('../../images/home/desktop/bckgr@2x_desktop.png');\n      background-size: contain, cover;\n      background-position: right bottom;\n    }\n  }\n}\n\n.mainTitle {\n  @include fonts(30px, 700, 1.38);\n\n  @include mq(tablet) {\n    @include fonts(68px, 700, 1.47);\n  }\n\n  @include mq(desktop) {\n    width: 55%;\n  }\n}\n","/* SET REM FUNCTION */\n@function rem($px) {\n  @return ($px / 16) + rem;\n}\n\n/* FONT-FAÐ¡E */\n@mixin font-face(\n  $font-name,\n  $path,\n  $weight: 400,\n  $style: normal,\n  $display: swap\n) {\n  @font-face {\n    font-family: quote($font-name);\n    src:\n      /* Safari, Android, iOS */ url($path + '.woff') format('woff'),\n      /* Modern Browsers */ url($path + '.woff2') format('woff2');\n    font-weight: $weight;\n    font-style: $style;\n    font-display: $display;\n  }\n}\n\n/* FONTS STYLE */\n@mixin fonts($fs, $fw: 400, $lh: 1.2, $ls: 0.01em) {\n  font-size: $fs;\n  font-weight: $fw;\n  line-height: $lh;\n  letter-spacing: $ls;\n}\n\n/* MEDIA QUERIES*/\n@mixin mq($range) {\n  $mobile: 320px;\n  $tablet: 768px;\n  $desktop: 1280px;\n\n  @if $range == mobile-only {\n    @media (max-width: #{$tablet - 0.02}) {\n      @content;\n    }\n  } @else if $range == mobile {\n    @media (min-width: $mobile) {\n      @content;\n    }\n  } @else if $range == tablet-only {\n    @media (min-width: $tablet) and (max-width: #{$desktop - 0.02}) {\n      @content;\n    }\n  } @else if $range == tablet {\n    @media (min-width: $tablet) {\n      @content;\n    }\n  } @else if $range == desktop {\n    @media (min-width: $desktop) {\n      @content;\n    }\n  } @else if $range == notDesktop {\n    @media (max-width: #{$desktop - 0.02}) {\n      @content;\n    }\n  } @else if $range == retina {\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-moz-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 2/1),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      @content;\n    }\n  }\n}\n\n@mixin gradient(\n  $color1: var(--start-gradient),\n  $color2: var(--end-gradient),\n  $deg: 90deg,\n  $content: false\n) {\n  @if $content {\n    background: $color1;\n    background: linear-gradient($deg, $color1, $color2), $content;\n  } @else {\n    background: $color1;\n    background: linear-gradient($deg, $color1, $color2);\n  }\n}\n\n/* ===== Usage\n.block {\n    @include mq(mobile) {\n        margin-bottom: 16px;\n    };\n  }\n\n.bgi-img mq(retina) {\n    background-image: url(../images/showcase@2x.jpg);\n}\n===== */\n\n/*DOTS COLORS*/\n// @mixin dot-color($color) {\n//   @if $color == --yellow-color {\n//     color: var(--yellow-color);\n//     --dots-color: var(--yellow-color);\n//   } @else if $color == --accent-color {\n//     color: var(--accent-color);\n//     --dots-color: var(--accent-color);\n//   }\n// }\n\n/* ===== Usage\n.slick-dots li button { @include dot-color(--yellow-color); }\n===== */\n"],"names":[],"sourceRoot":""}